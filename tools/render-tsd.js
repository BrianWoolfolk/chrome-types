#!/usr/bin/env node
/**
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import getStdin from 'get-stdin';
import * as chromeTypes from '../types/chrome.js';
import * as fs from 'fs';
import mri from 'mri';


function run() {
  const argv = mri(process.argv.slice(2), {
    boolean: ['help', 'all'],
    alias: {
      'help': ['h'],
      'all': ['a'],
    },
    unknown: (v) => {
      throw new Error(`unexpected flag: ${v}`);
    },
  });

  if (argv.help || argv._.length !== 0) {
    console.warn(`Usage: cat apis.json | tsd.js > out.d.ts

Prepares the TypeScript Definitions file containing Chrome APIs based on the
JSON payload generated by "prepare.js". Renders the generated file to stdout.

Options:
  -a, --all            generate all types (for site), not just MV3+
  `);
    process.exit(0);
  }

  const commentRewriter = buildNamespaceAwareMarkdownRewrite(Object.keys(o.api));

  /** @type {chromeTypes.ProcessedAPIData} */
  const o = JSON.parse(await getStdin());

  const context = new traverse.TraverseContext((spec, id) => {
    const visible = overrideApi.isVisible(spec, id);
    return visible;
  });

  const preambleFile = new URL('../content/preamble.d.ts', import.meta.url);
  const preambleContent = fs.readFileSync(preambleFile);

  process.stdout.write(preambleContent);
  process.stdout.write(`\n\n// Generated on ${new Date}\n\n\n`);
  process.stdout.write(buf.render());
}


run();
